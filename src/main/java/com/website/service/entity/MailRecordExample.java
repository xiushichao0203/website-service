package com.website.service.entity;

import java.util.ArrayList;
import java.util.List;

public class MailRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public MailRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public MailRecordExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public MailRecordExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        MailRecordExample example = new MailRecordExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public MailRecordExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public MailRecordExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andToMailIsNull() {
            addCriterion("TO_MAIL is null");
            return (Criteria) this;
        }

        public Criteria andToMailIsNotNull() {
            addCriterion("TO_MAIL is not null");
            return (Criteria) this;
        }

        public Criteria andToMailEqualTo(String value) {
            addCriterion("TO_MAIL =", value, "toMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToMailEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_MAIL = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToMailNotEqualTo(String value) {
            addCriterion("TO_MAIL <>", value, "toMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToMailNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_MAIL <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToMailGreaterThan(String value) {
            addCriterion("TO_MAIL >", value, "toMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToMailGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_MAIL > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToMailGreaterThanOrEqualTo(String value) {
            addCriterion("TO_MAIL >=", value, "toMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToMailGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_MAIL >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToMailLessThan(String value) {
            addCriterion("TO_MAIL <", value, "toMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToMailLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_MAIL < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToMailLessThanOrEqualTo(String value) {
            addCriterion("TO_MAIL <=", value, "toMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToMailLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_MAIL <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToMailLike(String value) {
            addCriterion("TO_MAIL like", value, "toMail");
            return (Criteria) this;
        }

        public Criteria andToMailNotLike(String value) {
            addCriterion("TO_MAIL not like", value, "toMail");
            return (Criteria) this;
        }

        public Criteria andToMailIn(List<String> values) {
            addCriterion("TO_MAIL in", values, "toMail");
            return (Criteria) this;
        }

        public Criteria andToMailNotIn(List<String> values) {
            addCriterion("TO_MAIL not in", values, "toMail");
            return (Criteria) this;
        }

        public Criteria andToMailBetween(String value1, String value2) {
            addCriterion("TO_MAIL between", value1, value2, "toMail");
            return (Criteria) this;
        }

        public Criteria andToMailNotBetween(String value1, String value2) {
            addCriterion("TO_MAIL not between", value1, value2, "toMail");
            return (Criteria) this;
        }

        public Criteria andFromMailIsNull() {
            addCriterion("FROM_MAIL is null");
            return (Criteria) this;
        }

        public Criteria andFromMailIsNotNull() {
            addCriterion("FROM_MAIL is not null");
            return (Criteria) this;
        }

        public Criteria andFromMailEqualTo(String value) {
            addCriterion("FROM_MAIL =", value, "fromMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andFromMailEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("FROM_MAIL = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFromMailNotEqualTo(String value) {
            addCriterion("FROM_MAIL <>", value, "fromMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andFromMailNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("FROM_MAIL <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFromMailGreaterThan(String value) {
            addCriterion("FROM_MAIL >", value, "fromMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andFromMailGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("FROM_MAIL > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFromMailGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_MAIL >=", value, "fromMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andFromMailGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("FROM_MAIL >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFromMailLessThan(String value) {
            addCriterion("FROM_MAIL <", value, "fromMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andFromMailLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("FROM_MAIL < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFromMailLessThanOrEqualTo(String value) {
            addCriterion("FROM_MAIL <=", value, "fromMail");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andFromMailLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("FROM_MAIL <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFromMailLike(String value) {
            addCriterion("FROM_MAIL like", value, "fromMail");
            return (Criteria) this;
        }

        public Criteria andFromMailNotLike(String value) {
            addCriterion("FROM_MAIL not like", value, "fromMail");
            return (Criteria) this;
        }

        public Criteria andFromMailIn(List<String> values) {
            addCriterion("FROM_MAIL in", values, "fromMail");
            return (Criteria) this;
        }

        public Criteria andFromMailNotIn(List<String> values) {
            addCriterion("FROM_MAIL not in", values, "fromMail");
            return (Criteria) this;
        }

        public Criteria andFromMailBetween(String value1, String value2) {
            addCriterion("FROM_MAIL between", value1, value2, "fromMail");
            return (Criteria) this;
        }

        public Criteria andFromMailNotBetween(String value1, String value2) {
            addCriterion("FROM_MAIL not between", value1, value2, "fromMail");
            return (Criteria) this;
        }

        public Criteria andToUserIdIsNull() {
            addCriterion("TO_USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andToUserIdIsNotNull() {
            addCriterion("TO_USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andToUserIdEqualTo(String value) {
            addCriterion("TO_USER_ID =", value, "toUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToUserIdEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_USER_ID = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToUserIdNotEqualTo(String value) {
            addCriterion("TO_USER_ID <>", value, "toUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToUserIdNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_USER_ID <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToUserIdGreaterThan(String value) {
            addCriterion("TO_USER_ID >", value, "toUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToUserIdGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_USER_ID > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("TO_USER_ID >=", value, "toUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToUserIdGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_USER_ID >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToUserIdLessThan(String value) {
            addCriterion("TO_USER_ID <", value, "toUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToUserIdLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_USER_ID < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToUserIdLessThanOrEqualTo(String value) {
            addCriterion("TO_USER_ID <=", value, "toUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andToUserIdLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("TO_USER_ID <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToUserIdLike(String value) {
            addCriterion("TO_USER_ID like", value, "toUserId");
            return (Criteria) this;
        }

        public Criteria andToUserIdNotLike(String value) {
            addCriterion("TO_USER_ID not like", value, "toUserId");
            return (Criteria) this;
        }

        public Criteria andToUserIdIn(List<String> values) {
            addCriterion("TO_USER_ID in", values, "toUserId");
            return (Criteria) this;
        }

        public Criteria andToUserIdNotIn(List<String> values) {
            addCriterion("TO_USER_ID not in", values, "toUserId");
            return (Criteria) this;
        }

        public Criteria andToUserIdBetween(String value1, String value2) {
            addCriterion("TO_USER_ID between", value1, value2, "toUserId");
            return (Criteria) this;
        }

        public Criteria andToUserIdNotBetween(String value1, String value2) {
            addCriterion("TO_USER_ID not between", value1, value2, "toUserId");
            return (Criteria) this;
        }

        public Criteria andMailSubjectIsNull() {
            addCriterion("MAIL_SUBJECT is null");
            return (Criteria) this;
        }

        public Criteria andMailSubjectIsNotNull() {
            addCriterion("MAIL_SUBJECT is not null");
            return (Criteria) this;
        }

        public Criteria andMailSubjectEqualTo(String value) {
            addCriterion("MAIL_SUBJECT =", value, "mailSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andMailSubjectEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("MAIL_SUBJECT = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMailSubjectNotEqualTo(String value) {
            addCriterion("MAIL_SUBJECT <>", value, "mailSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andMailSubjectNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("MAIL_SUBJECT <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMailSubjectGreaterThan(String value) {
            addCriterion("MAIL_SUBJECT >", value, "mailSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andMailSubjectGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("MAIL_SUBJECT > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMailSubjectGreaterThanOrEqualTo(String value) {
            addCriterion("MAIL_SUBJECT >=", value, "mailSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andMailSubjectGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("MAIL_SUBJECT >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMailSubjectLessThan(String value) {
            addCriterion("MAIL_SUBJECT <", value, "mailSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andMailSubjectLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("MAIL_SUBJECT < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMailSubjectLessThanOrEqualTo(String value) {
            addCriterion("MAIL_SUBJECT <=", value, "mailSubject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andMailSubjectLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("MAIL_SUBJECT <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMailSubjectLike(String value) {
            addCriterion("MAIL_SUBJECT like", value, "mailSubject");
            return (Criteria) this;
        }

        public Criteria andMailSubjectNotLike(String value) {
            addCriterion("MAIL_SUBJECT not like", value, "mailSubject");
            return (Criteria) this;
        }

        public Criteria andMailSubjectIn(List<String> values) {
            addCriterion("MAIL_SUBJECT in", values, "mailSubject");
            return (Criteria) this;
        }

        public Criteria andMailSubjectNotIn(List<String> values) {
            addCriterion("MAIL_SUBJECT not in", values, "mailSubject");
            return (Criteria) this;
        }

        public Criteria andMailSubjectBetween(String value1, String value2) {
            addCriterion("MAIL_SUBJECT between", value1, value2, "mailSubject");
            return (Criteria) this;
        }

        public Criteria andMailSubjectNotBetween(String value1, String value2) {
            addCriterion("MAIL_SUBJECT not between", value1, value2, "mailSubject");
            return (Criteria) this;
        }

        public Criteria andSendStsIsNull() {
            addCriterion("SEND_STS is null");
            return (Criteria) this;
        }

        public Criteria andSendStsIsNotNull() {
            addCriterion("SEND_STS is not null");
            return (Criteria) this;
        }

        public Criteria andSendStsEqualTo(String value) {
            addCriterion("SEND_STS =", value, "sendSts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andSendStsEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("SEND_STS = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendStsNotEqualTo(String value) {
            addCriterion("SEND_STS <>", value, "sendSts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andSendStsNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("SEND_STS <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendStsGreaterThan(String value) {
            addCriterion("SEND_STS >", value, "sendSts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andSendStsGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("SEND_STS > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendStsGreaterThanOrEqualTo(String value) {
            addCriterion("SEND_STS >=", value, "sendSts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andSendStsGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("SEND_STS >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendStsLessThan(String value) {
            addCriterion("SEND_STS <", value, "sendSts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andSendStsLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("SEND_STS < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendStsLessThanOrEqualTo(String value) {
            addCriterion("SEND_STS <=", value, "sendSts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andSendStsLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("SEND_STS <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendStsLike(String value) {
            addCriterion("SEND_STS like", value, "sendSts");
            return (Criteria) this;
        }

        public Criteria andSendStsNotLike(String value) {
            addCriterion("SEND_STS not like", value, "sendSts");
            return (Criteria) this;
        }

        public Criteria andSendStsIn(List<String> values) {
            addCriterion("SEND_STS in", values, "sendSts");
            return (Criteria) this;
        }

        public Criteria andSendStsNotIn(List<String> values) {
            addCriterion("SEND_STS not in", values, "sendSts");
            return (Criteria) this;
        }

        public Criteria andSendStsBetween(String value1, String value2) {
            addCriterion("SEND_STS between", value1, value2, "sendSts");
            return (Criteria) this;
        }

        public Criteria andSendStsNotBetween(String value1, String value2) {
            addCriterion("SEND_STS not between", value1, value2, "sendSts");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(String value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(String value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(String value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(String value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(String value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("CREATE_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLike(String value) {
            addCriterion("CREATE_TIME like", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotLike(String value) {
            addCriterion("CREATE_TIME not like", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<String> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<String> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(String value1, String value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(String value1, String value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(String value) {
            addCriterion("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("UPDATE_TIME = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(String value) {
            addCriterion("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("UPDATE_TIME <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(String value) {
            addCriterion("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("UPDATE_TIME > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("UPDATE_TIME >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(String value) {
            addCriterion("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("UPDATE_TIME < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(String value) {
            addCriterion("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(MailRecord.Column column) {
            addCriterion(new StringBuilder("UPDATE_TIME <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLike(String value) {
            addCriterion("UPDATE_TIME like", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotLike(String value) {
            addCriterion("UPDATE_TIME not like", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<String> values) {
            addCriterion("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<String> values) {
            addCriterion("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(String value1, String value2) {
            addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(String value1, String value2) {
            addCriterion("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        private MailRecordExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        protected Criteria(MailRecordExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public MailRecordExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table MAIL_RECORD
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MAIL_RECORD
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table MAIL_RECORD
         *
         * @mbg.generated
         */
        void example(MailRecordExample example);
    }
}
